{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/transparency.html","webpack:///./src/impl/ol/js/TransparentInteraction.js","webpack:///./src/impl/ol/js/transparencycontrol.js","webpack:///./src/facade/js/i18n/language.js","webpack:///./src/facade/js/transparencycontrol.js","webpack:///./src/facade/js/transparency.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","TransparentInteraction","ol","interaction","Pointer","options","layers_","handleDownEvent","setPosition","handleMoveEvent","optionsE","pos","radius","border","borderColor","layers","layer","map","getImpl","getOL3Layer","filter","addLayer","this","getMap","length","precompose","Observable","unByKey","postcompose","renderSync","setMap","on","precompose_","postcompose_","Array","push","k","splice","e","pixel","ctx","context","ratio","frameState","pixelRatio","save","beginPath","arc","Math","PI","lineWidth","strokeStyle","stroke","clip","restore","b","TransparencyControl","M","impl","Control","html","olMap","getMapImpl","setVisible","setZIndex","transparentInteraction_","addInteraction","undefined","setRadius","removeInteraction","removeLayer","translations","en","es","getLang","res","language","getTranslation","lang","getValue","keyPath","translation","utils","isNullOrEmpty","console","warn","split","reduce","prev","current","values","isUndefined","TransparencyImplControl","exception","pluginOnLeft","layerSelected","template","Promise","success","fail","transformToLayers","document","querySelector","addEventListener","evt","buttonOpened","classList","add","names","jsonp","vars","transparency","compileSync","Number","target","dialog","error","getElementsByClassName","activate","deactivate","disabled","removeEffects","effectSelected","remove","forEach","layerByObject","getLayers","includes","removeLayers","indexOf","layerByUrl","layerByName","transform","newLayer","isValidLayer","urlLayer","toUpperCase","WMS","url","addLayers","WMTS","matrixSet","displayInLayerSwitcher","type","control","Transparency","Plugin","name_","map_","controls_","className","positions","position","isArray","isNaN","parseInt","metadata_","api","metadata","separatorApiJson","separator","tooltip_","tooltip","control_","panel_","ui","Panel","collapsible","collapsedButtonClass","addControls","addPanels","removeTransparencyLayers","getLayersNames","removeControls","layersTransparency","join","plugin","window","M$plugin$Transparency","M$control$TransparencyControl","M$impl$control$TransparentInteraction","M$impl$control$TransparencyControl"],"mappings":"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","file":"transparency.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = \"<div id=\\\"div-contenedor\\\" class=\\\"m-transparency-container\\\">\\r\\n    <div id=\\\"m-transparency-titulo\\\">{{translations.transparency}}</div>\\r\\n    <div class=\\\"div-m-transparency-panel\\\">\\r\\n        <div class=\\\"m-transparency-effect-buttoms\\\">\\r\\n            <button id=\\\"m-transparency-transparent\\\" class=\\\"g-cartografia-gps4 big-buttom\\\" title=\\\"{{translations.transparency}}\\\"></button>\\r\\n        </div>\\r\\n        <div class=\\\"div-m-transparency-transparent-radius\\\">\\r\\n            <p>{{translations.radius}}: </p>\\r\\n            <input type=\\\"range\\\" min=\\\"30\\\" max=\\\"200\\\" value=\\\"100\\\" id=\\\"input-transparent-radius\\\"></input>\\r\\n        </div>\\r\\n        {{#if options}}\\r\\n            <div class=\\\"m-transparency-select\\\">\\r\\n                <p>{{translations.layers}}: </p>\\r\\n                <select disabled>\\r\\n                    {{#each options}}\\r\\n                        <option>{{name}}</option>\\r\\n                    {{/each}}\\r\\n                </select>\\r\\n                <div class=\\\"m-transparency-select_arrow\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        {{/if}}\\r\\n    </div>\\r\\n</div>\";","/**\n * @module M/impl/control/TransparentInteraction\n\n */\nexport default class TransparentInteraction extends ol.interaction.Pointer {\n  /**\n   * @classdesc\n   * Main constructor of the TransparentInteraction.\n   *\n   * @constructor\n   * @extends {ol.interaction.Pointer}\n   * @api stable\n   */\n  constructor(options) {\n    super(options);\n    this.layers_ = [];\n\n    ol.interaction.Pointer.call(this, {\n      handleDownEvent: this.setPosition,\n      handleMoveEvent: this.setPosition,\n    });\n\n    // Default options\n    const optionsE = options || {};\n\n    this.pos = false;\n    this.radius = (optionsE.radius || 100);\n    this.border =  optionsE.border;\n    this.borderColor = optionsE.borderColor;\n  \n    if (optionsE.layers) {\n      optionsE.layers = [optionsE.layers];\n      const layer = optionsE.layers.map(layer => layer.getImpl().getOL3Layer())\n        .filter(layer => layer != null);\n      this.addLayer(layer);\n    }\n  }\n\n  /** Set the map > start postcompose\n   */\n  setMap(map) {\n    let i;\n    if (this.getMap()) {\n      for (i = 0; i < this.layers_.length; i += 1) {\n        if (this.layers_[i].precompose) ol.Observable.unByKey(this.layers_[i].precompose);\n        if (this.layers_[i].postcompose) ol.Observable.unByKey(this.layers_[i].postcompose);\n        this.layers_[i].precompose = this.layers_[i].postcompose = null;\n      }\n      this.getMap().renderSync();\n    }\n\n    ol.interaction.Pointer.prototype.setMap.call(this, map);\n\n    if (map) {\n      for (i = 0; i < this.layers_.length; i += 1) {\n        this.layers_[i].precompose = this.layers_[i].on('precompose', this.precompose_.bind(this));\n        this.layers_[i].postcompose = this.layers_[i].on('postcompose', this.postcompose_.bind(this));\n        this.layers_[i].precompose = this.layers_[i].on('prerender', this.precompose_.bind(this));\n        this.layers_[i].postcompose = this.layers_[i].on('postrender', this.postcompose_.bind(this));\n      }\n      map.renderSync();\n    }\n  }\n\n  /** Set clip radius\n   * @param {integer} radius\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    if (this.getMap()) this.getMap().renderSync();\n  }\n\n  /** Add a layer to clip\n   * @param {ol.layer|Array<ol.layer>} layer to clip\n   */\n  addLayer(layers) {\n    if (!(layers instanceof Array)) layers = [layers];\n    for (let i = 0; i < layers.length; i += 1) {\n      const l = { layer: layers[i] };\n      if (this.getMap()) {\n        l.precompose = layers[i].on('precompose', this.precompose_.bind(this));\n        l.postcompose = layers[i].on('postcompose', this.postcompose_.bind(this));\n        l.precompose = layers[i].on('prerender', this.precompose_.bind(this));\n        l.postcompose = layers[i].on('postrender', this.postcompose_.bind(this));\n        this.getMap().renderSync();\n      }\n      this.layers_.push(layers[i]);\n    }\n  }\n\n  /** Remove a layer to clip\n   * @param {ol.layer|Array<ol.layer>} layer to clip\n   */\n  removeLayer(layers) {\n    if (!(layers instanceof Array)) layers = [layers];\n    for (let i = 0; i < layers.length; i += 1) {\n      let k;\n      for (k = 0; k < this.layers_.length; k += 1) {\n        if (this.layers_[k] === layers[i]) {\n          break;\n        }\n      }\n      if (k !== this.layers_.length && this.getMap()) {\n        if (this.layers_[k].precompose) ol.Observable.unByKey(this.layers_[k].precompose);\n        if (this.layers_[k].postcompose) ol.Observable.unByKey(this.layers_[k].postcompose);\n        this.layers_.splice(k, 1);\n        this.getMap().renderSync();\n      }\n    }\n  }\n\n  /** Set position of the clip\n   * @param {ol.Pixel|ol.MapBrowserEvent}\n   */\n  setPosition(e) {\n    if (e.pixel) {\n      this.pos = e.pixel;\n    } else if (e && e instanceof Array) {\n      this.pos = e;\n    } else {\n      e = [-10000000, -10000000];\n\n    }\n    if (this.getMap()) this.getMap().renderSync();\n  }\n\n  /* @private\n   */\n  precompose_(e) {\n    const ctx = e.context;\n    const ratio = e.frameState.pixelRatio;\n\n    ctx.save();\n    if(this.border){\n      ctx.beginPath();\n      ctx.arc(this.pos[0] * ratio, this.pos[1] * ratio, this.radius+2.5 * ratio, 0, 2 * Math.PI);\n      ctx.lineWidth = 5;\n      ctx.strokeStyle = this.borderColor;\n      ctx.stroke();\n    }\n    ctx.beginPath();\n    ctx.arc(this.pos[0] * ratio, this.pos[1] * ratio, this.radius * ratio, 0, 2 * Math.PI);\n    ctx.clip();\n    \n  }\n\n  /* @private\n   */\n  postcompose_(e) {\n    e.context.restore();\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(b) {\n    super.setActive(b);\n  }\n}\n","/**\r\n * @module M/impl/control/TransparencyControl\r\n */\r\nimport TransparentInteraction from 'impl/TransparentInteraction';\r\n\r\n\r\nexport default class TransparencyControl extends M.impl.Control {\r\n  /**\r\n   * This function adds the control to the specified map\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map to add the plugin\r\n   * @param {HTMLElement} html of the plugin\r\n   * @api stable\r\n   */\r\n  addTo(map, html) {\r\n    // super addTo - don't delete\r\n    this.map = map;\r\n    this.olMap = map.getMapImpl();\r\n\r\n    super.addTo(map, html);\r\n  }\r\n\r\n  /**\r\n   * Effects on the layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param { M.Layer } layer layer to which to assign an effect\r\n   * @param { Number } radius radius to assign\r\n   * @api stable\r\n   */\r\n  effectSelected(options) {\r\n    options.layers.setVisible(true);\r\n    options.layers.setZIndex(90000);\r\n    this.transparentInteraction_ = new TransparentInteraction(options);\r\n\r\n    this.olMap.addInteraction(this.transparentInteraction_);\r\n  }\r\n\r\n  /**\r\n   * Set radius\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param { Number } radius radius to assign\r\n   * @api stable\r\n   */\r\n  setRadius(radius) {\r\n    if (this.transparentInteraction_ !== undefined) this.transparentInteraction_.setRadius(radius);\r\n  }\r\n\r\n  /**\r\n   * Set layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param { M.layer } layer layer to assign effect\r\n   * @api stable\r\n   */\r\n  addLayer(layer) {\r\n    this.transparentInteraction_.addLayer(layer.getImpl().getOL3Layer());\r\n  }\r\n\r\n  /**\r\n   * Remove effects\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  removeEffects() {\r\n    this.olMap.removeInteraction(this.transparentInteraction_);\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param { M.layer } layer to remove\r\n   * @api stable\r\n   */\r\n  removeLayer(layer) {\r\n    this.transparentInteraction_.removeLayer(layer.getImpl().getOL3Layer());\r\n  }\r\n}\r\n","import en from './en';\nimport es from './es';\n\n/**\n * Default object with es and en translate.\n *\n * @const\n * @type {object}\n */\nconst translations = {\n  en,\n  es,\n};\n\nconst getLang = () => {\n  let res = 'es';\n  if (typeof M.language.getLang === 'function') {\n    res = M.language.getLang();\n  }\n\n  return res;\n};\n\n/**\n * This function sets a new language translate.\n * @param {string} lang\n * @param {JSON} json\n * @public\n * @api\n */\nexport const addTranslation = (lang, json) => {\n  translations[lang] = json;\n};\n\n/**\n * This function gets a language translate.\n *\n * @param {string} lang\n * @return {JSON}\n * @public\n * @api\n */\nexport const getTranslation = (lang) => {\n  return translations[lang];\n};\n\n/**\n * This function gets a language value from key\n *\n * @public\n * @param {string}\n * @param {string}\n * @return {string}\n * @public\n * @api\n */\n\nexport const getValue = (keyPath, lang = getLang()) => {\n  const translation = getTranslation(lang);\n  let value = '';\n  if (M.utils.isNullOrEmpty(translation)) {\n    /* eslint-disable no-console */\n    console.warn(`The translation '${lang}' has not been defined.`);\n  } else {\n    value = keyPath.split('.').reduce((prev, current) => prev[current], translation);\n  }\n\n  return value;\n};\n","/**\r\n * @module M/control/TransparencyControl\r\n */\r\n\r\nimport TransparencyImplControl from 'impl/transparencycontrol';\r\nimport template from 'templates/transparency';\r\nimport { getValue } from './i18n/language';\r\n\r\nexport default class TransparencyControl extends M.Control {\r\n  /**\r\n   * @classdesc\r\n   * Main constructor of the class. Creates a PluginControl\r\n   * control\r\n   *\r\n   * @constructor\r\n   * @extends {M.Control}\r\n   * @api stable\r\n   */\r\n  constructor(values) {\r\n    // 1. checks if the implementation can create PluginControl\r\n    if (M.utils.isUndefined(TransparencyImplControl)) {\r\n      M.exception(getValue('exception'));\r\n    }\r\n    // 2. implementation of this control\r\n    const impl = new TransparencyImplControl();\r\n    super(impl, 'Transparency');\r\n\r\n    /**\r\n     * Position plugin\r\n     * @public\r\n     * @type {String}\r\n     */\r\n    this.pluginOnLeft = values.pluginOnLeft;\r\n    /**\r\n     * All layers\r\n     * @public\r\n     * @public {Array}\r\n     */\r\n    this.layers = values.layers;\r\n    /**\r\n     * Radius selected\r\n     * @private\r\n     * @type {Number}\r\n     */\r\n    this.radius = values.radius;\r\n    /**\r\n     * Layer selected\r\n     * @public\r\n     * @type {M.layer}\r\n     */\r\n    this.layerSelected = null;\r\n    /**\r\n     * Enable/disable Border\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.border = values.border;\r\n    /**\r\n     * Border color selected\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.borderColor = values.borderColor;\r\n    /**\r\n     * Template\r\n     * @public\r\n     * @type { HTMLElement }\r\n     */\r\n    this.template = null;\r\n  }\r\n\r\n  /**\r\n   * This function creates the view\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map to add the control\r\n   * @api stable\r\n   */\r\n  createView(map) {\r\n    this.map = map;\r\n    return new Promise((success, fail) => {\r\n      this.layers = this.transformToLayers(this.layers);\r\n\r\n      if (this.pluginOnLeft) {\r\n        document.querySelector('.m-panel.m-plugin-transparency').querySelector('.m-panel-btn.g-cartografia-gps4').addEventListener('click', (evt) => {\r\n          let buttonOpened = document.querySelector('.m-panel.m-plugin-transparency.opened');\r\n          if (buttonOpened !== null) {\r\n            buttonOpened = buttonOpened.querySelector('.m-panel-btn.g-cartografia-flecha-izquierda');\r\n          }\r\n          if (buttonOpened && this.pluginOnLeft) {\r\n            buttonOpened.classList.add('opened-left');\r\n          }\r\n        });\r\n      }\r\n\r\n      let names = this.layers.map(function(layer) {\r\n        return layer instanceof Object ? { name: layer.name } : { name: layer };\r\n      });\r\n\r\n      let options = {\r\n        jsonp: true,\r\n        vars: {\r\n          translations: {\r\n            transparency: getValue('transparency'),\r\n            radius: getValue('radius'),\r\n            layers: getValue('layers'),\r\n          }\r\n        }\r\n      };\r\n\r\n      if (names.length >= 1) {\r\n        options.vars.options = names;\r\n      }\r\n\r\n      this.template = M.template.compileSync(template, options);\r\n\r\n      // Radius\r\n      this.template.querySelector('#input-transparent-radius').value = this.radius;\r\n      this.template.querySelector('#input-transparent-radius').addEventListener('change', (evt) => {\r\n        this.radius = Number(evt.target.value);\r\n        this.getImpl().setRadius(this.radius);\r\n      });\r\n\r\n      if (this.layers.length == 0 || this.layers == '') {\r\n        M.dialog.error(getValue('errorLayer'));\r\n      } else {\r\n        // Botón efecto transparencia      \r\n        this.template.querySelector('#m-transparency-transparent').addEventListener('click', (evt) => {\r\n\r\n          if (document.getElementsByClassName('buttom-pressed').length == 0) {\r\n            this.activate();\r\n          } else {\r\n            this.deactivate();\r\n          }\r\n\r\n        });\r\n\r\n        if (options !== '') {\r\n          this.template.querySelector('select').disabled = true;\r\n          this.template.querySelector('input').disabled = true;\r\n          this.template.querySelector('select').addEventListener('change', (evt) => {\r\n            this.layerSelected.setVisible(false);\r\n            this.removeEffects();\r\n            const layer = this.layers.filter(function(layer) {\r\n              return layer.name === evt.target.value\r\n            });\r\n            this.layerSelected = layer[0];\r\n            this.getImpl().effectSelected({\r\n              layers: this.layerSelected,\r\n              radius: this.radius,\r\n              border: this.border,\r\n              borderColor: this.borderColor,\r\n            });\r\n          });\r\n        }\r\n      }\r\n      success(this.template);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Activate Select/Input\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  activate() {\r\n    if (this.layerSelected === null) this.layerSelected = this.layers[0];\r\n    let names = this.layers.map(function(layer) {\r\n      return layer instanceof Object ? { name: layer.name } : { name: layer };\r\n    });\r\n    this.template.querySelector('#m-transparency-transparent').classList.add('buttom-pressed');\r\n    this.getImpl().effectSelected({\r\n      layers: this.layerSelected,\r\n      radius: this.radius,\r\n      border: this.border,\r\n      borderColor: this.borderColor,\r\n    });\r\n    if (names.length >= 1) {\r\n      this.template.querySelector('select').disabled = false;\r\n      this.template.querySelector('input').disabled = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deactivate Select/Input\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  deactivate() {\r\n    if (this.layerSelected === null) this.layerSelected = this.layers[0];\r\n    let names = this.layers.map(function(layer) {\r\n      return layer instanceof Object ? { name: layer.name } : { name: layer };\r\n    });\r\n    this.template.querySelector('#m-transparency-transparent').classList.remove('buttom-pressed');\r\n    this.removeEffects();\r\n    this.layerSelected.setVisible(false);\r\n    if (names.length >= 1) {\r\n      this.template.querySelector('select').disabled = true;\r\n      this.template.querySelector('input').disabled = true;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * This function is called to remove the effects\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  removeEffects() {\r\n    this.getImpl().removeEffects();\r\n  }\r\n\r\n  /**\r\n   * This function remove the transparency layers\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  removeTransparencyLayers(layers) {\r\n    layers.forEach(layer => {\r\n      if (!(layer instanceof Object)) {\r\n        if (layer.indexOf('*') >= 0) {\r\n          const urlLayer = layer.split('*');\r\n          let name = urlLayer[3]\r\n          const layerByUrl = this.map.getLayers().filter(l => name.includes(l.name))[0];\r\n          this.map.removeLayers(layerByUrl);\r\n        } else {\r\n          const layerByName = this.map.getLayers().filter(l => layer.includes(l.name))[0];\r\n          this.map.removeLayers(layerByName);\r\n        }\r\n      } else if (layer instanceof Object) {\r\n        const layerByObject = this.map.getLayers().filter(l => layer.name.includes(l.name))[0];\r\n        this.map.removeLayers(layerByObject);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This function transform string to M.Layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   * @param {string}\r\n   * @return\r\n   */\r\n  transformToLayers(layers) {\r\n    const transform = layers.map(function(layer) {\r\n      let newLayer = null;\r\n      if (!(layer instanceof Object)) {\r\n        if (layer.indexOf('*') >= 0) {\r\n          const urlLayer = layer.split('*');\r\n          if (urlLayer[0].toUpperCase() == 'WMS') {\r\n            newLayer = new M.layer.WMS({\r\n              url: urlLayer[2],\r\n              name: urlLayer[3]\r\n            });\r\n            this.map.addLayers(newLayer);\r\n          } else if (urlLayer[0].toUpperCase() == 'WMTS') {\r\n            newLayer = new M.layer.WMTS({\r\n              url: urlLayer[1],\r\n              name: urlLayer[2],\r\n              matrixSet: urlLayer[3],\r\n            });\r\n            this.map.addLayers(newLayer);\r\n          }\r\n        } else {\r\n          const layerByName = this.map.getLayers().filter(l => layer.includes(l.name))[0];\r\n          newLayer = this.isValidLayer(layerByName) ? layerByName : null;\r\n        }\r\n      } else if (layer instanceof Object) {\r\n        const layerByObject = this.map.getLayers().filter(l => layer.name.includes(l.name))[0];\r\n        newLayer = this.isValidLayer(layerByObject) ? layerByObject : null;\r\n      }\r\n      if (newLayer !== null) {\r\n        newLayer.displayInLayerSwitcher = false;\r\n        newLayer.setVisible(false);\r\n        return newLayer\r\n\r\n      } else {\r\n        this.layers.remove(layer);\r\n      }\r\n    }, this);\r\n    return (transform[0] === undefined) ? [] : transform;\r\n  }\r\n\r\n  /**\r\n   * This function transform string to M.Layer\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   * @param {string}\r\n   * @return {Boolean}\r\n   */\r\n  isValidLayer(layer) {\r\n    return layer.type === 'WMTS' || layer.type === 'WMS';\r\n  }\r\n\r\n  /**\r\n   * This function compares controls\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Control} control to compare\r\n   * @api stable\r\n   * @return {Boolean}\r\n   */\r\n  equals(control) {\r\n    return control instanceof TransparencyControl;\r\n  }\r\n\r\n  getLayersNames() {\r\n    return this.layers.map(l => l.name);\r\n  }\r\n}\r\n","/**\r\n * @module M/plugin/Transparency\r\n */\r\nimport 'assets/css/transparency';\r\nimport TransparencyControl from './transparencycontrol';\r\nimport api from '../../api';\r\nimport { getValue } from './i18n/language';\r\n// import { isArray } from '../../../../../facade/js/util/Utils';\r\n\r\nexport default class Transparency extends M.Plugin {\r\n  /**\r\n   * @classdesc\r\n   * Main facade plugin object. This class creates a plugin\r\n   * object which has an implementation Object\r\n   *\r\n   * @constructor\r\n   * @extends {M.Plugin}\r\n   * @param {Object} impl implementation object\r\n   * @api stable\r\n   */\r\n  constructor(options = {}) {\r\n    super();\r\n\r\n    /**\r\n     * Name plugin\r\n     * @private\r\n     * @type {String}\r\n     */\r\n    this.name_ = 'transparency';\r\n\r\n    /**\r\n     * Facade of the map\r\n     * @private\r\n     * @type {M.Map}\r\n     */\r\n    this.map_ = null;\r\n\r\n    /**\r\n     * Array of controls\r\n     * @private\r\n     * @type {Array<M.Control>}\r\n     */\r\n    this.controls_ = [];\r\n\r\n    /**\r\n     * Class name of the html view Plugin\r\n     * @public\r\n     * @type {string}\r\n     */\r\n    this.className = 'm-plugin-transparency';\r\n\r\n    /**\r\n     * Position of the Plugin\r\n     * @public\r\n     * Posible values: TR | TL | BL | BR\r\n     * @type {String}\r\n     */\r\n    const positions = ['TR', 'TL', 'BL', 'BR'];\r\n    this.position = positions.includes(options.position) ? options.position : 'TR';\r\n\r\n    /**\r\n     * Layer names that will have effects\r\n     * @public\r\n     * Value: the names separated with coma\r\n     * @type {string}\r\n     */\r\n    if (options.layers === undefined || options.layers === '') {\r\n      M.dialog.error(getValue('errorLayer'));\r\n      this.layers = [];\r\n    } else {\r\n      if (Array.isArray(options.layers)) {\r\n        this.layers = options.layers;\r\n      } else {\r\n        this.layers = options.layers.split(\",\");\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Transparent effect radius\r\n     * Value: number in range 30 - 200\r\n     * @type {number}\r\n     * @public\r\n     */\r\n\r\n    if (!isNaN(parseInt(options.radius))) {\r\n\r\n      if (options.radius >= 30 && options.radius <= 200) {\r\n        this.radius = parseInt(options.radius);\r\n      } else if (options.radius > 200) {\r\n        this.radius = 200;\r\n      } else if (options.radius < 30) {\r\n        this.radius = 30;\r\n      }\r\n\r\n    } else {\r\n      this.radius = 100; // Default value\r\n    }\r\n\r\n    /**\r\n     * Enable/disable border\r\n     * @type {boolean}\r\n     * @public\r\n     */\r\n    this.border = options.border;\r\n    if (this.border === undefined) {\r\n      this.border = true;\r\n    }\r\n    \r\n    /**\r\n     * Radius border color\r\n     * Value: color value\r\n     * @type {string}\r\n     * @public\r\n     */\r\n    this.borderColor = options.borderColor || 'white';\r\n    \r\n    /**\r\n     * Metadata from api.json\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.metadata_ = api.metadata;\r\n\r\n    this.separatorApiJson = api.url.separator;\r\n\r\n    /**\r\n     *@private\r\n     *@type { string }\r\n     */\r\n    this.tooltip_ = options.tooltip || getValue('tooltip');\r\n  }\r\n\r\n  /**\r\n   * This function adds this plugin into the map\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map the map to add the plugin\r\n   * @api stable\r\n   */\r\n  addTo(map) {\r\n    const pluginOnLeft = !!(['TL', 'BL'].includes(this.position));\r\n\r\n    const values = {\r\n      pluginOnLeft,\r\n      layers: this.layers,\r\n      radius: this.radius,\r\n      border: this.border,\r\n      borderColor: this.borderColor,\r\n    };\r\n    this.control_ = new TransparencyControl(values);\r\n    this.controls_.push(this.control_);\r\n    this.map_ = map;\r\n    this.panel_ = new M.ui.Panel('panelTransparency', {\r\n      collapsible: true,\r\n      position: M.ui.position[this.position],\r\n      className: this.className,\r\n      collapsedButtonClass: 'g-cartografia-gps4',\r\n      tooltip: this.tooltip_,\r\n    });\r\n    this.panel_.addControls(this.controls_);\r\n    map.addPanels(this.panel_);\r\n  }\r\n\r\n\r\n  /**\r\n   * This function destroys this plugin\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  destroy() {\r\n    this.control_.removeEffects();\r\n    this.control_.removeTransparencyLayers(this.control_.getLayersNames());\r\n    this.map_.removeControls([this.control_]);\r\n    [this.control_, this.panel_, this.map_, this.layers, this.radius, this.border, this.borderColor] = [null, null, null, null, null, null, null];\r\n  }\r\n\r\n  /**\r\n   * This function gets name plugin\r\n   * @getter\r\n   * @public\r\n   * @returns {string}\r\n   * @api stable\r\n   */\r\n  get name() {\r\n    return this.name_;\r\n  }\r\n\r\n  /**\r\n   * This function gets metadata plugin\r\n   *\r\n   * @public\r\n   * @getter\r\n   * @api stable\r\n   * @return {Object}\r\n   */\r\n  getMetadata() {\r\n    return this.metadata_;\r\n  }\r\n\r\n  /**\r\n   * Get the API REST Parameters of the plugin\r\n   *\r\n   * @function\r\n   * @public\r\n   * @api\r\n   */\r\n  getAPIRest() {\r\n    let layersTransparency = this.control_.getLayersNames();\r\n\r\n    return `${this.name}=${this.position}${this.separatorApiJson}${layersTransparency.join(',')}${this.separatorApiJson}${this.radius}${this.separatorApiJson}${this.border}${this.separatorApiJson}${this.borderColor}`;\r\n  }\r\n\r\n  /**\r\n   * Activate plugin\r\n   *\r\n   * @function\r\n   * @public\r\n   * @api\r\n   */\r\n  activate() {\r\n    this.control_.activate();\r\n  }\r\n\r\n  /**\r\n   * Desactivate plugin\r\n   *\r\n   * @function\r\n   * @public\r\n   * @api\r\n   */\r\n  deactivate() {\r\n    this.control_.deactivate();\r\n  }\r\n\r\n  /**\r\n   * This\r\n   function compare\r\n   if pluging recieved by param is instance of M.plugin.Transparency\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.plugin} plugin to compare\r\n   * @api stable\r\n   */\r\n  equals(plugin) {\r\n    if (plugin instanceof Transparency) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import M$plugin$Transparency from '/home/fbmanas/Documentos/git-sigc/transparency/src/facade/js/transparency';\nimport M$control$TransparencyControl from '/home/fbmanas/Documentos/git-sigc/transparency/src/facade/js/transparencycontrol';\nimport M$impl$control$TransparentInteraction from '/home/fbmanas/Documentos/git-sigc/transparency/src/impl/ol/js/TransparentInteraction';\nimport M$impl$control$TransparencyControl from '/home/fbmanas/Documentos/git-sigc/transparency/src/impl/ol/js/transparencycontrol';\n\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.control) window.M.control = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.plugin.Transparency = M$plugin$Transparency;\nwindow.M.control.TransparencyControl = M$control$TransparencyControl;\nwindow.M.impl.control.TransparentInteraction = M$impl$control$TransparentInteraction;\nwindow.M.impl.control.TransparencyControl = M$impl$control$TransparencyControl;\n"],"sourceRoot":""}